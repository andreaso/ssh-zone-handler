[project]
name = "ssh-zone-handler"
version = "0.3.3"
description = "SSH commands to provide Secondary DNS self-service."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
authors = [{name = "Andreas Olsson", email = "andreas@arrakis.se"}]
requires-python = ">=3.10, <3.14"
dependencies = [
  "pydantic (>=2.12.3,<3)",
  "pyyaml (>=6.0.3,<7)",
]

[project.urls]
repository = "https://github.com/andreaso/ssh-zone-handler"

[dependency-groups]
dev = [
  "mypy (>=1.8.2)",
  "pytest (>=8.4.2)",
  "pytest-mock (>=3.15.1)",
  "types-pyyaml (>=6.0.12.20250915,<7)",
  "ruff (>=0.14.2)",
]

[project.scripts]
szh-sudoers = "ssh_zone_handler.cli:sudoers"
szh-wrapper = "ssh_zone_handler.cli:wrapper"

[tool.ruff.lint]
select = [
  "F",   # Pyflakes
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "I",   # isort
  "N",   # pep8-naming
  "PL",  # pylint
  "UP",  # pyupgrade
  "RUF", # ruff
  "ERA", # eradicate
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "S",   # flake8-bandit
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "ICN", # flake8-import-conventions
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
]
ignore = ["N805", "RUF005", "S603", "SIM105"]

[tool.pytest.ini_options]
log_format = "%(message)s"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
